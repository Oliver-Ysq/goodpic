{"version":3,"sources":["components/Uploader.js","components/Tips.js","pages/Home.js"],"names":["Result","styled","div","H1","h2","Img","img","DL","dl","DT","dt","Myinput","input","InputWrapper","dd","Dragger","Upload","Component","observer","useStores","ImageStore","UserStore","wRef","useRef","hRef","store","useLocalStore","width","setWidth","this","current","value","height","setHeight","serverFile","attributes","url","widthStr","heightStr","props","showUploadList","beforeUpload","file","currentUser","message","warning","test","type","size","setFile","setFilename","name","upload","then","res","window","console","log","catch","err","tip","spinning","isUploading","className","InboxOutlined","target","rel","href","src","onChange","placeholder","ref","fullStr","Tips","children","MyUploader","Uploader","Home"],"mappings":"ojDAOA,IAAMA,EAASC,IAAOC,IAAV,KAMNC,EAAKF,IAAOG,GAAV,KAMFC,EAAMJ,IAAOK,IAAV,KASHC,EAAKN,IAAOO,GAAV,KASFC,EAAKR,IAAOS,GAAV,KAMFC,EAAUV,IAAOW,MAAV,KASPC,EAAeZ,IAAOa,GAAV,KAYVC,EAAYC,IAAZD,QA4HOE,EA1HGC,aAAS,WAAO,IAAD,EACGC,cAA1BC,EADuB,EACvBA,WAAYC,EADW,EACXA,UACdC,EAAOC,mBACPC,EAAOD,mBACPE,EAAQC,aAAc,iBAAO,CACjCC,MAAO,KACP,eACE,OAAOF,EAAME,MAAQ,MAAQF,EAAME,MAAQ,IAE7CC,SALiC,WAM/BC,KAAKF,MAAQL,EAAKQ,QAAQC,OAE5BC,OAAQ,KACR,gBACE,OAAOP,EAAMO,OAAS,MAAQP,EAAMO,OAAS,IAE/CC,UAZiC,WAa/BJ,KAAKG,OAASR,EAAKM,QAAQC,OAE7B,cACE,OACEX,EAAWc,WAAWC,WAAWC,IAAID,WAAWC,IAChD,gBACAX,EAAMY,SACNZ,EAAMa,eAINC,EAAQ,CACZC,gBAAgB,EAChBC,aAAc,SAACC,GACb,OAA8B,OAA1BrB,EAAUsB,aACZC,IAAQC,QAAQ,2DACT,GAGJ,wCAAwCC,KAAKJ,EAAKK,MAInDL,EAAKM,KAAO,SACdJ,IAAQC,QAAQ,6DACT,IAGTzB,EAAW6B,QAAQP,GACnBtB,EAAW8B,YAAYR,EAAKS,MAC5B/B,EAAWgC,SACRC,MAAK,SAACC,GACLC,OAAOD,IAAMA,EACbE,QAAQC,IAAI,+BAEbC,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAI,gCACvB,IAhBLb,IAAQC,QAAQ,gFACT,KAmBb,OACE,6BACE,kBAAC,IAAD,CAAMe,IAAI,wBAASC,SAAUzC,EAAW0C,aACtC,kBAAC/C,EAAYwB,EACX,uBAAGwB,UAAU,wBACX,kBAACC,EAAA,EAAD,OAEF,uBAAGD,UAAU,mBAAb,mDAGA,uBAAGA,UAAU,mBAAb,4EAMJ,6BAC6B,OAA1B3C,EAAWc,WACV,kBAAClC,EAAD,KACE,kBAACG,EAAD,iCACA,kBAACI,EAAD,KACE,kBAACE,EAAD,iCACA,4BACE,uBACEwD,OAAO,SACPC,IAAI,aACJC,KAAM/C,EAAWc,WAAWC,WAAWC,IAAID,WAAWC,KAErDhB,EAAWc,WAAWC,WAAWC,IAAID,WAAWC,MAKrD,kBAAC3B,EAAD,iCACA,4BACE,kBAACJ,EAAD,CACE+D,IAAKhD,EAAWc,WAAWC,WAAWC,IAAID,WAAWC,OAGzD,kBAAC3B,EAAD,iCACA,kBAACI,EAAD,KACE,kBAACF,EAAD,CACE0D,SAAU,kBAAM5C,EAAMG,YACtB0C,YAAY,2BACZC,IAAKjD,IAEP,kBAACX,EAAD,CACE0D,SAAU,kBAAM5C,EAAMQ,aACtBqC,YAAY,4BACZC,IAAK/C,KAGT,4BACE,uBAAGyC,OAAO,SAASC,IAAI,aAAaC,KAAM1C,EAAM+C,SAC7C/C,EAAM+C,YAKb,U,mLCjLZ,IAAMC,EAAOxE,IAAOC,IAAV,KAgBKe,EARGC,aAAS,SAACqB,GAExB,OADqBpB,cAAbE,UAEMsB,YAAc,KACpB,kBAAC8B,EAAD,KAAOlC,EAAMmC,a,8FCXzB,IAAMC,EAAa1E,YAAO2E,EAAP3E,CAAH,KAIV4E,EAAO3D,aAAS,WAElB,OAAQ,oCACJ,kBAAC,EAAD,iFACA,kBAACyD,EAAD,UAIOE","file":"static/js/9.d5b6ffa0.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\r\nimport { useStores } from \"../stores\";\r\nimport { observer, useLocalStore } from \"mobx-react\";\r\nimport { message, Upload, Spin } from \"antd\";\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Result = styled.div`\r\n  margin-top: 20px;\r\n  border: 1px dashed #ccc;\r\n  padding: 10px 20px;\r\n  border-radius: 4px;\r\n`;\r\nconst H1 = styled.h2`\r\n  margin: 10px 0;\r\n  text-align: center;\r\n  color: rgb(40, 131, 136);\r\n  font-weight: bold;\r\n`;\r\nconst Img = styled.img`\r\n  max-width: 300px;\r\n  @media (max-width: 500px) {\r\n    max-width: 200px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n`;\r\n\r\nconst DL = styled.dl`\r\n  @media (max-width: 500px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst DT = styled.dt`\r\n  font-size: 20px;\r\n  color: rgb(16, 42, 56);\r\n  margin: 10px auto;\r\n`;\r\n\r\nconst Myinput = styled.input`\r\n  @media (max-width: 500px) {\r\n    margin-bottom: 10px;\r\n  }\r\n  @media (min-width: 500px) {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nconst InputWrapper = styled.dd`\r\n  display: flex;\r\n  flex-direction: row;\r\n  @media (min-width: 500px) {\r\n    justify-content: flex-start;\r\n  }\r\n  @media (max-width: 500px) {\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nconst { Dragger } = Upload;\r\n\r\nconst Component = observer(() => {\r\n  const { ImageStore, UserStore } = useStores();\r\n  const wRef = useRef();\r\n  const hRef = useRef();\r\n  const store = useLocalStore(() => ({\r\n    width: null,\r\n    get widthStr() {\r\n      return store.width ? \"/w/\" + store.width : \"\";\r\n    },\r\n    setWidth() {\r\n      this.width = wRef.current.value;\r\n    },\r\n    height: null,\r\n    get heightStr() {\r\n      return store.height ? \"/h/\" + store.height : \"\";\r\n    },\r\n    setHeight() {\r\n      this.height = hRef.current.value;\r\n    },\r\n    get fullStr() {\r\n      return (\r\n        ImageStore.serverFile.attributes.url.attributes.url +\r\n        \"?imageView2/0\" +\r\n        store.widthStr +\r\n        store.heightStr\r\n      );\r\n    },\r\n  }));\r\n  const props = {\r\n    showUploadList: false,\r\n    beforeUpload: (file) => {\r\n      if (UserStore.currentUser === null) {\r\n        message.warning(\"请先登录再上传哦！\");\r\n        return false;\r\n      }\r\n\r\n      if (!/(svg$)|(png$)|(jpeg$)|(jpg$)|(gif$)/gi.test(file.type)) {\r\n        message.warning(\"只能上传png/svg/jpg/gif格式的文件哦\");\r\n        return false;\r\n      }\r\n      if (file.size > 1024 * 1024) {\r\n        message.warning(\"图片大小不能超过1M哦\");\r\n        return false;\r\n      }\r\n\r\n      ImageStore.setFile(file);\r\n      ImageStore.setFilename(file.name);\r\n      ImageStore.upload()\r\n        .then((res) => {\r\n          window.res = res;\r\n          console.log(\"上传成功\");\r\n        })\r\n        .catch((err) => console.log(\"上传失败\"));\r\n      return false;\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Spin tip=\"上传中...\" spinning={ImageStore.isUploading}>\r\n        <Dragger {...props}>\r\n          <p className=\"ant-upload-drag-icon\">\r\n            <InboxOutlined />\r\n          </p>\r\n          <p className=\"ant-upload-text\">\r\n            Click or drag image file to this area to upload\r\n          </p>\r\n          <p className=\"ant-upload-hint\">\r\n            Support for /.svg/.png/.jpg/.gif file, and the size is limited in\r\n            1MB.\r\n          </p>\r\n        </Dragger>\r\n      </Spin>\r\n      <div>\r\n        {ImageStore.serverFile !== null ? (\r\n          <Result>\r\n            <H1>上传结果</H1>\r\n            <DL>\r\n              <DT>线上地址</DT>\r\n              <dd>\r\n                <a\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                  href={ImageStore.serverFile.attributes.url.attributes.url}\r\n                >\r\n                  {ImageStore.serverFile.attributes.url.attributes.url}\r\n                </a>\r\n              </dd>\r\n              {/* <DT>文件名</DT>\r\n              <dd>{ImageStore.filename}</dd> */}\r\n              <DT>图片预览</DT>\r\n              <dd>\r\n                <Img\r\n                  src={ImageStore.serverFile.attributes.url.attributes.url}\r\n                />\r\n              </dd>\r\n              <DT>尺寸定制</DT>\r\n              <InputWrapper>\r\n                <Myinput\r\n                  onChange={() => store.setWidth()}\r\n                  placeholder=\"max width(not necessary)\"\r\n                  ref={wRef}\r\n                />\r\n                <Myinput\r\n                  onChange={() => store.setHeight()}\r\n                  placeholder=\"max height(not necessary)\"\r\n                  ref={hRef}\r\n                />\r\n              </InputWrapper>\r\n              <dd>\r\n                <a target=\"_blank\" rel=\"noreferrer\" href={store.fullStr}>\r\n                  {store.fullStr}\r\n                </a>\r\n              </dd>\r\n            </DL>\r\n          </Result>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Component;\r\n","import React from 'react';\r\nimport {useStores} from \"../stores/index\";\r\nimport {observer} from \"mobx-react\";\r\nimport styled from 'styled-components'\r\n\r\nconst Tips = styled.div`\r\n  background: #ff9999;\r\n  padding: 10px;\r\n  margin: 10px 0 30px 0;\r\n  border-radius: 4px;\r\n  color: white;\r\n`\r\n\r\nconst Component = observer((props) => {\r\n    const { UserStore} = useStores();\r\n    return (\r\n        UserStore.currentUser ? null :\r\n            <Tips>{props.children}</Tips>\r\n    );\r\n});\r\n\r\nexport default Component;","import React from 'react';\r\nimport {observer} from \"mobx-react\";\r\nimport Uploader from '../components/Uploader';\r\nimport Tips from '../components/Tips';\r\nimport styled from 'styled-components';\r\n\r\nconst MyUploader = styled(Uploader)`\r\n    margin-top: 10px;\r\n`\r\n\r\nconst Home = observer(() => {\r\n\r\n    return (<>\r\n        <Tips>你好，请先登录再上传哦！</Tips>\r\n        <MyUploader/>\r\n    </>);\r\n});\r\n\r\nexport default Home;"],"sourceRoot":""}